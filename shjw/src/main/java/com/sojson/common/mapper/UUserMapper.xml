<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sojson.common.dao.UUserMapper" >
  <resultMap id="BaseResultMap" type="com.sojson.common.model.UUser" >
       <id column="id" property="id" jdbcType="BIGINT" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pswd" property="pswd" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIGINT" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="u_type" property="u_type" jdbcType="VARCHAR" />
    <result column="hiredate" property="hiredate" jdbcType="VARCHAR" />
    <result column="leavedate" property="leavedate" jdbcType="VARCHAR" />
    <result column="station" property="station" jdbcType="VARCHAR" />
    <result column="work_status" property="work_status" jdbcType="INTEGER" />
    <result column="roleid" property="roleid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, nickname, email, pswd, create_time,
    last_login_time,status,sex,phone,position,
    u_type,hiredate,leavedate,station,work_status,roleid
  </sql>
  <sql id="limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      	${page_sql}
      </if>
  </sql>
  
  <sql id="where_all">
  	<where>
  	<if test="findContent != null and findContent !='' " >
        and (
        LOWER(nickname) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
        LOWER(email) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
        )
      </if>
      </where>
  </sql>
  <select id="findAll" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from u_user 
    <include refid="where_all"/>
    <include refid="limit_sql" />
  </select>
  
   <select id="findAllUser" parameterType="Map" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from u_user 
    where 1=1
    <if test="search_v!=''">
    and (email=#{search_v} or phone=#{search_v})
    </if>
    <if test="page!=-1">
			limit #{page},10
	</if>  
  </select>
  
  <select id="findCount" resultMap="BaseResultMap" >
 	 select count(id) from  u_user
  	<include refid="where_all" />
  </select>
  
  
  <!-- 用户权限分配的分页查询 -->
  <select id="findUserAndRole" resultType="com.sojson.permission.bo.UserRoleAllocationBo">
  	select u.id,u.nickname,u.email,u.create_time,u.last_login_time,u.status ,group_concat(ur.name) roleNames,group_concat(ur.id)roleIds from
	 u_user u
	left join u_user_role uur on uur.uid = u.id
	left join u_role ur on ur.id = uur.rid
	<where>
  	<if test="findContent != null and findContent !='' " >
        and (
        LOWER(u.nickname) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
        LOWER(u.email) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
        )
      </if>
      </where>
	group by u.id 
  </select>
  <select id="selectRoleByUserId" resultType="com.sojson.permission.bo.URoleBo">
  		
		select ur.id,ur.name,ur.type,ifnull(uu.id,0)marker,uu.id userId from u_role ur
		left join u_user_role uur on uur.rid = ur.id
		left join (select id from u_user where id =#{id,jdbcType=BIGINT}) uu on uu.id = uur.uid
		group by ur.id
  		<!-- 
  		勾选不上自己调整sql语句，由于mysql版本不同，所以不支持，可以看看Demo项目 http://shiro.itboy.net
  		select ur.id,ur.name,ur.type,ifnull(uur.uid,0) marker from u_role ur
		left join(select * from u_user_role where uid=#{id,jdbcType=BIGINT}) uur on uur.rid = ur.id
		 -->
  </select>
  
  <!-- 登录 -->
  <select id="login" resultMap="BaseResultMap" >
       select  
       <include refid="Base_Column_List" />
       from u_user
       where email = #{email,jdbcType=VARCHAR} and  pswd = #{pswd,jdbcType=VARCHAR} 
  </select>
  <!-- 根据邮箱|帐号查询 -->
  <select id="findUserByEmail" resultMap="BaseResultMap" >
  	   select   
       from u_user
       where email = #{email,jdbcType=VARCHAR} 
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select  
        <include refid="Base_Column_List" />
        from u_user
        where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from u_user
        where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.sojson.common.model.UUser" >
        insert into u_user (nickname,email,pswd,create_time,last_login_time,
        status,sex,phone,position,u_type,hiredate,station,work_status,roleid
        )
        values (#{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
           #{pswd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
           #{lastLoginTime,jdbcType=TIMESTAMP},#{status,jdbcType=BIGINT},
           #{sex,jdbcType=INTEGER},#{phone,jdbcType=VARCHAR},
           #{position,jdbcType=VARCHAR},#{u_type,jdbcType=VARCHAR},
           #{hiredate,jdbcType=VARCHAR},#{station,jdbcType=VARCHAR},
           #{work_status,jdbcType=INTEGER},#{roleid,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.sojson.common.model.UUser" >
       insert into u_user
       <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="id != null" >
         id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="pswd != null" >
        pswd,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null" >
        #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.sojson.common.model.UUser" >
    update u_user
    <set>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null" >
        pswd = #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIGINT},
      </if>    
        sex = #{sex,jdbcType=INTEGER},   
       <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if> 
        <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if> 
        <if test="u_type != null" >
        u_type = #{u_type,jdbcType=VARCHAR},
      </if> 
        <if test="hiredate != null" >
        hiredate = #{hiredate,jdbcType=VARCHAR},
      </if> 
        <if test="leavedate != null" >
        leavedate = #{leavedate,jdbcType=VARCHAR},
      </if> 
        <if test="station != null" >
        station = #{station,jdbcType=VARCHAR},
      </if> 
        <if test="work_status != null" >
        work_status = #{work_status,jdbcType=INTEGER},
      </if>
      <if test="roleid != null and roleid!=0">
        roleid=#{roleid,jdbcType=INTEGER}
      </if>            
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.sojson.common.model.UUser" >
    update u_user
      set nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pswd = #{pswd,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
   <!-- zjf -->
	<select id="userlist" resultType="com.sojson.common.model.UUser">
	     select  
	         id, nickname, email, pswd,create_time,
             last_login_time,status,sex,phone,position,
             u_type,hiredate,leavedate,station,work_status
	         from u_user 
	          
	          limit #{0},10	
	</select>
	
    <select id="getCountUser" resultType="int">
	     select count(1) from u_user	
	</select> 
	 <select id="findOne_user" parameterType="java.lang.Long" resultType="com.sojson.common.model.UUser">
	     select 
	     <include refid="Base_Column_List" />
	     from u_user where id=#{id,jdbcType=BIGINT} 
	</select>
	<!-- 查询客服员 -->
   <select id="user_kfy" resultType="com.sojson.common.model.UUser">
	     select *from u_user where position='客服员'
  </select>
     
  <update id="updateUser" parameterType="com.sojson.common.model.UUser" >
      update u_user <set>
       <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},email=#{email,jdbcType=VARCHAR}
      </if> 
       <if test="sex != null" >
       ,sex = #{sex,jdbcType=INTEGER}
      </if>  
       <if test="phone != null" >
       , phone = #{phone,jdbcType=VARCHAR}
      </if> 
        <if test="position != null" >
        , position = #{position,jdbcType=VARCHAR}
      </if> 
        <if test="u_type != null" >
        , u_type = #{u_type,jdbcType=VARCHAR}
      </if> 
        <if test="hiredate != null" >
        , hiredate = #{hiredate,jdbcType=VARCHAR}
      </if>  
        <if test="station != null" >
        , station = #{station,jdbcType=VARCHAR}
      </if>
        <if test="roleid != null" >
        , roleid = #{roleid,jdbcType=INTEGER}
      </if>   
      </set>  
       where id = #{id,jdbcType=BIGINT}
  </update>
  
    <update id="update_user_leave" parameterType="com.sojson.common.model.UUser">
      update u_user
      set leavedate=#{leavedate,jdbcType=VARCHAR} and work_status=1
      where id=#{id,jdbcType=BIGINT}
  </update>
   <delete id="delete_User" parameterType="java.lang.Long">
     delete from u_user where id=#{0}
   </delete>
</mapper>
